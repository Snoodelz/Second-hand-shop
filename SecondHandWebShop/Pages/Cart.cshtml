@page
@model SecondHandWebShop.Pages.CartModel
@using SecondHandWebShop.Helpers;
@{
}
<br />
<p class="text-center first-page">Varukorg</p>
<section>


    <!--Grid row-->
    <div class="row">

        <!--Grid column-->
        <div class="col-lg-8">

            <!-- Card -->
            <div class="card wish-list mb-3">
                <div class="card-body">

                    @if (Model.cart == null)
                    {
                        <h5 class="mb-4">Cart (<span>0</span> items)</h5>

                    }
                    else
                    {
                        if (Model.cart.Sum(x => x.Quantity) == 1)
                        {
                            <h5 class="mb-4">Cart (<span>@Model.cart.Sum(x => x.Quantity).ToString()</span> item)</h5>

                        }
                        else
                        {
                        <h5 class="mb-4">Cart (<span>@Model.cart.Sum(x => x.Quantity).ToString()</span> items)</h5>

                        }

                        foreach (var item in Model.cart)
                        {

                            <div class="row mb-4">
                                <div class="col-md-5 col-lg-3 col-xl-3">
                                    <div class="view zoom overlay z-depth-1 rounded mb-3 mb-md-0">
                                        <img class="img-fluid w-100"
                                             src="@item.Clothes.ImageUrl" alt="Sample">
                                    </div>
                                </div>
                                <div class="col-md-7 col-lg-9 col-xl-9">
                                    <div>
                                        <div class="d-flex justify-content-between">
                                            <div>
                                                <h5>@item.Clothes.Name</h5>
                                                <p class="mb-3 text-muted text-uppercase small">@item.Clothes.Category</p>
                                                <p class="mb-2 text-muted text-uppercase small">@item.Clothes.Color</p>
                                                <p class="mb-3 text-muted text-uppercase small">@item.Clothes.Size</p>
                                            </div>


                                            <div>
                                                <div class="def-number-input number-input safari_only mb-0 w-100">
                                                    @if (item.Clothes.Category == "Merchandise" && item.Clothes.StockBalance > 1)
                                                    {
                                                        <button onclick="this.parentNode.querySelector('input[type=number]').stepDown()"
                                                                class="minus btn-secondary">
                                                            -
                                                        </button>
                                                        <input class="quantity" min="1" max="@item.Clothes.StockBalance" name="quantity" value="1" type="number">
                                                        <button onclick="this.parentNode.querySelector('input[type=number]').stepUp()"
                                                                class="plus btn-secondary">
                                                            +
                                                        </button>

                                                    }

                                                </div>
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <a asp-page="cart" asp-page-handler="delete" asp-route-id="@item.Clothes.Id">
                                                    <i class="mr-1">Remove</i>
                                                </a>
                                            </div>
                                            @if (item.Clothes.Discount > 0)
                                            {
                                                item.Clothes.DiscountedPrice = item.Clothes.Price - (item.Clothes.Price * item.Clothes.Discount) / 100;
                                                <p class="mb-0"><span><strong><s>@Math.Round(item.Clothes.Price) SEK</s> <br /> <span style="color:palevioletred">@Math.Round(item.Clothes.DiscountedPrice) SEK</span></strong></span></p>
                                            }
                                            else
                                            {
                                                <p class="mb-0"><span><strong>@Math.Round(item.Clothes.Price) SEK </strong></span></p>

                                            }

                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }


                </div>
            </div>
            <!-- Card -->

        </div>
        <!--Grid column-->
        <!--Grid column-->
        <div class="col-lg-4">

            <!-- Card -->
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="mb-3">The total amount of</h5>
                    @if (Model.cart == null)
                    {
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0">
                                Price
                                <span>0</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                Shipping
                                <span>Free</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3">
                                <div>
                                    <strong>Total price:</strong>
                                </div>
                                <span><strong>0</strong></span>
                            </li>
                        </ul>
                    }
                    else
                    {
                        foreach (var item in Model.cart)
                        {
                            if (item.Clothes.DiscountedPrice > 0)
                            {
                                item.Clothes.Price = item.Clothes.DiscountedPrice;
                            }

                        }
                        Model.Total = Model.cart.Sum(item => item.Clothes.Price * item.Quantity);


                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0">
                                Price
                                <span>@Math.Round(Model.Total) SEK</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                Shipping
                                <span>Free</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3">
                                <div>
                                    <strong>Total price:</strong>
                                </div>
                                <span><strong>@Math.Round(Model.Total) SEK</strong></span>
                            </li>
                        </ul>
                    }
                    @*<button type="button" class="btn btn-secondary btn-block waves-effect waves-light">Checkout</button>*@
                    <a asp-page="CheckOut" asp-page-handler="buy" asp-route-id="@Model.ID" class="btn btn-secondary btn-lg btn-block">Checkout</a>
                </div>
            </div>
            <!-- Card -->

        </div>
        <!--Grid column-->

    </div>
    <!--Grid row-->

</section>
<!--Section: Block Content-->
